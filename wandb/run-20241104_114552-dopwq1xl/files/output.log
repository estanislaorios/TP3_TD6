Epoch: [1/5], Train loss: 4.1589
Epoch: [1/5], Valid loss: 4.1589, Valid accuracy: 0.0600
Saving the best model at 0 epochs!
Epoch: [2/5], Train loss: 4.1589
Epoch: [2/5], Valid loss: 4.1589, Valid accuracy: 0.0600
Epoch: [3/5], Train loss: 4.1589
Epoch: [3/5], Valid loss: 4.1589, Valid accuracy: 0.0600
Epoch: [4/5], Train loss: 4.1589
Epoch: [4/5], Valid loss: 4.1589, Valid accuracy: 0.0600
Epoch: [5/5], Train loss: 4.1589
Epoch: [5/5], Valid loss: 4.1589, Valid accuracy: 0.0600
/var/folders/vr/m1trbm1d41l3lhm_cxvqfg400000gn/T/ipykernel_78520/3571020372.py:2: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  S = torch.load('best_model.ckpt')
loaded!
Epoch: [5/5], Valid loss: 4.1589, Valid accuracy: 0.1500
shape of waveform torch.Size([1, 110250]), sample rate with 22050, label is 3
